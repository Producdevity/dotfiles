set -g default-shell /bin/zsh

set -g default-terminal "screen-256color"
set -ga terminal-overrides ',screen-256color:Tc'

# Colors
gruvbox_red='#cc241d'
gruvbox_green='#98971a'
gruvbox_yellow='#d79921'
gruvbox_blue='#458588'
gruvbox_purple='#b16286'
gruvbox_aqua='#689d6a'
gruvbox_orange='#d65d0e'

gruvbox_faded_red='#9d0006'
gruvbox_faded_green='#79740e'
gruvbox_faded_yellow='#b57614'
gruvbox_faded_blue='#076678'
gruvbox_faded_purple='#8f3f71'
gruvbox_faded_aqua='#427b58'
gruvbox_faded_orange='#af3a03'

gruvbox_fg0='#fbf1c7'
gruvbox_fg1='#ebdbb2'
gruvbox_fg1='#d5c4a1'
gruvbox_fg2='#d5c4a1'
gruvbox_fg3='#bdae93'
gruvbox_fg4='#a89984'

gruvbox_bg0_hard='#1d2021'
gruvbox_bg0='#282828'
gruvbox_bg0_soft='#32302f'
gruvbox_bg1='#3c3836'
gruvbox_bg2='#504945'
gruvbox_bg3='#665c54'
gruvbox_bg4='#7c6f64'


# hx_primary='#41e1fd'
# hx_error='#ff9587'
# hx_success='#40ff9f'

hx_primary=$gruvbox_blue
hx_primary_faded=$gruvbox_faded_blue
hx_secondary=$gruvbox_bg0_soft
hx_success='#40ff9f'
hx_warn=$gruvbox_yellow
hx_warn_faded=$gruvbox_faded_yellow
hx_error=$gruvbox_faded_red
hx_fg=$gruvbox_fg0
hx_fg_disabled=$gruvbox_fg3
hx_bg=$gruvbox_bg0
hx_bg_soft=$gruvbox_bg0_soft


# Set prefix to C-e.
unbind C-b
set -g prefix C-e

# Bindings:
# - to see current bindings: tmux list-keys

# Vim-like key bindings for pane navigation (default uses cursor keys).
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally used for last-window
bind l select-pane -R

# Resizing (mouse also works).
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5

# Fast toggle (normally prefix-l).
bind ^space last-window

# Intuitive window-splitting keys.
# Open new/split panes with the path of the current pane.
bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind '\' split-window -h -c '#{pane_current_path}' # normally prefix-%
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'
bind '-' split-window -v -c '#{pane_current_path}' # normally prefix-"
unbind c
bind c new-window -c '#{pane_current_path}' # Create new window prefix-c

# Window Cycle/Swap
bind e previous-window
bind f next-window
bind E swap-window -t -1
bind F swap-window -t +1

# Pane Border
# setw -g pane-border-style fg=$hx_warn,bg=$hx_bg
# setw -g pane-active-border-style fg=$hx_primary,bg=$hx_warn
setw -g pane-border-style fg=$hx_warn,bg=default
setw -g pane-active-border-style fg=$hx_primary,bg=$hx_primary

# Status bar.
set -g status on
set -g status-interval 2
set -g status-justify "left"
set -g status-left-length 60
set -g status-right-length 90
set -g status-fg $hx_fg
set -g status-bg $hx_bg
set -g status-left-length 40
set -g status-left '#[fg=colour144]#S § 😏 %l:%M %p | ' # SECTION SIGN (UTF-8: c2 a7)
set -g status-right "#[fg=$hx_warn_faded]$USER@#h #[fg=magenta]%l:%M %p 🎊 "
set -g status-interval 60 # Default is 15.

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# Highlight window status bar.
setw -g window-status-style fg=$hx_fg_disabled,bg=$hx_bg

# Highlight active window status bar.
setw -g window-status-current-style fg=$hx_primary,bg=$hx_bg_soft

# setw -g window-status-current-format "#[fg=$hx_bg, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=$hx_bg]⮀"

# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys`.
set -g mouse on

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
setw -g main-pane-width 85

set -g history-limit 8192


# Start window and pane numbering at 1, (0 is too hard to reach).
set -g base-index 1
set -g pane-base-index 1

# Don't wait long for escape sequence after seeing C-e.
set -s escape-time 10

# Dynamically update iTerm tab and window titles.
set -g set-titles off

# Needed as on tmux 1.9 and up (defaults to off).
# Added in tmux commit c7a121cfc0137c907b7bfb.
set -g focus-events on

# But don't change tmux's own window titles.
setw -g automatic-rename on

# Don't automatically rename the windows (yes we do)
setw -g automatic-rename on

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
setw -g wrap-search off

# Enable xterm-keys to recognize the Alt key as the Meta key in TMUX
setw -g xterm-keys on

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
#
# (Would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting).
set -g set-titles-string "#T : #h > #S > #W"

# Show bells in window titles.
set -g window-status-bell-style fg=$hx_warn_faded,bold,underscore

# Clipper.
bind-key y run-shell "tmux save-buffer - | nc -U ~/.clipper.sock"

# reload tmux config file
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Copy-paste integration
set -g default-command "reattach-to-user-namespace -l $SHELL"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Clear since Ctrl-L is used
bind C-i send-keys -R \; clear-history

# Clear command with ctrl-y (mapped to Cmd-l in BTT)
bind C-y send-keys "clear" \; send-keys "Enter"

# Clear shell and tmux history
bind -n C-y send-keys "clear" \; send-keys "Enter"

# List of plugins
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
