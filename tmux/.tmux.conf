# use "xterm-256color" instead of "screen-256color" bc it's faster
# set -g default-terminal "xterm-256color"
# set -g default-terminal "screen-256color"
# set-option default-terminal "screen-256color"

set-option -g default-shell /bin/zsh

# set -g default-terminal "screen-256color"
# set-option -g default-terminal "screen-256color"
# set-option -ga terminal-overrides ',screen-256color:Tc'

set -g default-terminal "xterm-256color"
set-option default-terminal "xterm-256color"
set-option -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ',xterm-256color:Tc'

# set-option default-terminal "tmux-256color"
# set-option -g default-terminal "tmux-256color"
# set-option -ga terminal-overrides ',xterm-256color:Tc'

# Set prefix to C-e.
unbind C-b
set -g prefix C-e

# Bindings:
# - to see current bindings: tmux list-keys

# Vim-like key bindings for pane navigation (default uses cursor keys).
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally used for last-window
bind l select-pane -R

# Resizing (mouse also works).
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5

# Fast toggle (normally prefix-l).
bind ^space last-window

# Intuitive window-splitting keys.
# Open new/split panes with the path of the current pane.
bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind '\' split-window -h -c '#{pane_current_path}' # normally prefix-%
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'
bind '-' split-window -v -c '#{pane_current_path}' # normally prefix-"
unbind c
bind c new-window -c '#{pane_current_path}' # Create new window prefix-c

# Window Cycle/Swap
bind e previous-window
bind f next-window
bind E swap-window -t -1
bind F swap-window -t +1

# Pane border
set -g pane-border-style fg=magenta
set -g pane-active-border-style fg=magenta,bg=default

# Pane Border Color Palette
set-option -g pane-active-border-style fg=colour208,bg=default
set-option -g pane-border-style fg=white,bg=black

# Status Line
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "left"
set-option -g status-left-length 60
set-option -g status-right-length 90
# set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"

# Status bar.
set -g status-bg '#373b41'
set -g status-bg colour235
set -g status-fg white
set -g status-fg colour231
set -g status-left-length 40
set -g status-left '#[fg=colour144]#S § 😏 %l:%M %p | ' # SECTION SIGN (UTF-8: c2 a7)
set -g status-right "#[fg=yellow]$USER@#h #[fg=magenta]%l:%M %p 🎊 "
set -g status-interval 60 # Default is 15.

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# Highlight active window.
set -w -g window-status-current-style bg='#f33232'
set -w -g window-status-current-style fg='#ffffff'
set-option -g status-bg colour235
set-option -g status-fg colour136
set-window-option -g window-status-style fg=colour244,bg=default

# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys`.
set -g mouse on

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set -w -g main-pane-width 85

set -g history-limit 8192
set-option -g history-limit per-window


# Start window and pane numbering at 1, (0 is too hard to reach).
set -g base-index 1
set -g pane-base-index 1

# Don't wait for an escape sequence after seeing C-e.
# set -s escape-time 0
set-option -s escape-time 10

# Dynamically update iTerm tab and window titles.
set -g set-titles off

# Needed as on tmux 1.9 and up (defaults to off).
# Added in tmux commit c7a121cfc0137c907b7bfb.
set -g focus-events on

# But don't change tmux's own window titles.
set -w -g automatic-rename on

# Don't automatically rename the windows (yes we do)
set-window-option -g automatic-rename on

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set -w -g wrap-search off

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
#
# (Would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting).
set -g set-titles-string "#T : #h > #S > #W"

# Show bells in window titles.
set -g window-status-bell-style fg=yellow,bold,underscore

# Clipper.
bind-key y run-shell "tmux save-buffer - | nc -U ~/.clipper.sock"

# reload tmux config file
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# enable utf-8 on status bar
set -g status on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Clear since Ctrl-L is used
bind C-i send-keys -R \; clear-history

# Clear command with ctrl-y (mapped to Cmd-l in BTT)
bind C-y send-keys "clear" \; send-keys "Enter"

# Clear shell and tmux history
bind -n C-y send-keys "clear" \; send-keys "Enter"
# bind -n C-y send-keys "clear && tmux clear-history" \; send-keys "Enter"
